#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
int count_one_bits(unsigned int n){
	int count = 0;
	int i;
	for (i = 0; i < 32; ++i){
		if (((n >> i) & 1) == 1){
			count++;
		}
	}
	return count;
}
int count_one_bits2(unsigned int n){
	int count = 0;
	while (n){
		//非零为真
		count++;
		n = n&(n - 1);
		//在n的二进制表示中,从低位到高位,第一次出现1的地方变为0
	}
	return count;
}
int main(){
	unsigned int n;
	scanf("%d",&n);
	printf("%d\n", count_one_bits(n));
	printf("%d\n", count_one_bits2(n));
	system("pause");
	return 0;
} 
///////////////////////////////////////////
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
void print_bits(int n){
	int i = 0;
	//打印偶数序列
	for (i = 31; i > 0;i-=2){
		printf("%d ",(n >> i) & 1);
	}
	printf("\n");
	//打印奇数位
	for (i = 30; i >= 0; i -= 2){
		printf("%d ", (n >> i) & 1);
	}
	printf("\n");
}
int main(){
	int n;
	scanf("%d",&n);
	print_bits(n);
	system("pause");
	return 0;

} 
///////////////////////////////////////////
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
void print(int n){
	if (n > 9){
		print(n / 10);
	}
	printf("%d ", n % 10);
}
int main(){
	int n;
	scanf("%d",&n);
	print(n);
	system("pause");
	return 0;

} 
///////////////////////////////////////////
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
int cal_diff(int m, int n){
	int count = 0;
	int i = 0;
	for (i = 0; i < 32; i++){
		if (((m >> i) & 1) != ((n >> i) & 1)){
			count++;
		}
	}
	return count;
}
int cal_diff2(int m, int n){
	int ret = m^n;
	int count = 0;
	while (ret){
		//计算二进制数ret中1的个数
		ret = ret&(ret - 1);
		count++;
	}
	return count;
}
int main(){
	int m, n;
	scanf("%d %d",&m,&n);
	printf("%d\n",cal_diff(m,n));
	printf("%d\n",cal_diff2(m, n));
	system("pause");
	return 0;
} 
